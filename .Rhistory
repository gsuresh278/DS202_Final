library(dplyr)
library(tidyverse)
df <- read.csv("CO2 emission by countries.csv")
head(df)
length(df)
nrow(df)
summary(df)
drop_na(df)
# checking for missing values
sum(is.na(df))
# removing rows with any missing values
df_clean <- na.omit(df)
#provides the structure of the dataframe, showing data types and the first few values of each variable, used for understanding the data types of each column
print("Structure: ")
str(df)
# returns the names of the columns in the dataframe
print("Column names: ")
colnames(df)
#returns the class of the object
print("class: ")
sapply(df, class)
# returns the number of unique values for each variable in the dataframe. Helps with understanding the cardinality of each variable
print("unique values: ")
sapply(df, function(x) length(unique(x)))
# remove duplicate rows
df_unique <- unique(df)
# computes the correlation matrix for the numeric variables in the dataframe. Helps with understanding the relationships between different variables
print("correlation matrix: ")
numeric_df <- df[sapply(df, is.numeric)]
cor_matrix <- cor(numeric_df)
print(cor_matrix)
View(df)
head(df)
print(df)
unique_countries <- unique(df$Country)
print(unique_countries)
View(df)
View(df)
df <- df[df$CO2.emission..Tons. != 0, ]
df %>%
filter(CO2.emission..Tons. != 0)
View(df)
library(dplyr)
library(tidyverse)
df <- read.csv("CO2 emission by countries.csv")
head(df)
length(df)
nrow(df)
summary(df)
drop_na(df)
# checking for missing values
sum(is.na(df))
# removing rows with any missing values
df_clean <- na.omit(df)
#provides the structure of the dataframe, showing data types and the first few values of each variable, used for understanding the data types of each column
print("Structure: ")
str(df)
# returns the names of the columns in the dataframe
print("Column names: ")
colnames(df)
#returns the class of the object
print("class: ")
sapply(df, class)
# returns the number of unique values for each variable in the dataframe. Helps with understanding the cardinality of each variable
print("unique values: ")
sapply(df, function(x) length(unique(x)))
# remove duplicate rows
df_unique <- unique(df)
# computes the correlation matrix for the numeric variables in the dataframe. Helps with understanding the relationships between different variables
print("correlation matrix: ")
numeric_df <- df[sapply(df, is.numeric)]
cor_matrix <- cor(numeric_df)
print(cor_matrix)
unique_countries <- unique(df$Country)
print(unique_countries)
df %>%
filter(CO2.emission..Tons. != 0)
min_year_data <- df %>%
group_by(Country) %>%
filter(CO2.emission..Tons. != 0) %>%
summarise(Min_Year = min(Year),
Min_CO2_Emission = CO2.emission..Tons.[which.min(Year)])
print(min_year_data)
min_year_data <- df %>%
group_by(Country) %>%
filter(CO2.emission..Tons. != 0) %>%
summarise(Min_Year = min(Year),
CO2_Emission = CO2.emission..Tons.[which.min(Year)])
print(min_year_data)
selected_countries <- min_year_data %>%
filter(Min_Year < 1900)
selected_df <- df %>%
filter(Country %in% selected_countries$Country)
ggplot(selected_df, aes(x = Year, y = CO2.emission..Tons., color = Country)) +
geom_line() +
labs(title = "CO2 Emissions of Countries with Min Year < 1900",
x = "Year",
y = "CO2 Emission (Tons)") +
theme_minimal()
selected_countries <- min_year_data %>%
filter(Min_Year < 1900)
selected_df <- df %>%
filter(Country %in% selected_countries$Country)
print(unique(selected_df$Country))
ggplot(selected_df, aes(x = Year, y = CO2.emission..Tons., color = Country)) +
geom_line() +
labs(title = "CO2 Emissions of Countries with Min Year < 1900",
x = "Year",
y = "CO2 Emission (Tons)") +
theme_minimal()
selected_countries <- min_year_data %>%
filter(Min_Year < 1900)
selected_df <- df %>%
filter(Country %in% selected_countries$Country)
print(count(unique(selected_df$Country)))
selected_countries <- min_year_data %>%
filter(Min_Year < 1900)
selected_df <- df %>%
filter(Country %in% selected_countries$Country)
print(length(unique(selected_df$Country))
ggplot(selected_df, aes(x = Year, y = CO2.emission..Tons., color = Country)) +
selected_countries <- min_year_data %>%
filter(Min_Year < 1900)
selected_df <- df %>%
filter(Country %in% selected_countries$Country)
print(length(unique(selected_df$Country)))
ggplot(selected_df, aes(x = Year, y = CO2.emission..Tons., color = Country)) +
geom_line() +
labs(title = "CO2 Emissions of Countries with Min Year < 1900",
x = "Year",
y = "CO2 Emission (Tons)") +
theme_minimal()
population_threshold <- 100000000  # 100 million
large_countries <- df %>%
filter(Population.2022 > population_threshold)
population_threshold <- 100000000  # 100 million
large_countries <- df %>%
filter(Population.2022. > population_threshold)
population_threshold <- 100000000  # 100 million
large_countries <- df %>%
filter(Population.2022. > population_threshold)
print(large_countries)
population_threshold <- 75000000  # 100 million
large_countries <- df %>%
filter(Population.2022. > population_threshold)
print(large_countries)
